name:                QuickFuzz
version:             0.1.0.0
synopsis:            An experimental grammar fuzzer in Haskell using QuickCheck.
license:             GPL-3
license-file:        LICENSE
author:              Pablo Buiras   <buiras@chalmers.se>,
                     Gustavo Grieco <grieco@cifasis-conicet.gov.ar>,
                     Martín Ceresa  <ceresa@cifasis-conicet.gov.ar>
                     Martín Escarrá <mescarra@gmail.com>
                     Agustín Mista  <amista@dcc.fceia.unr.edu.ar>                    

build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

flag debug
    description: Enable debug messages
    default: False

flag image
  Description: Supports Tga, Png, Bmp, Jpeg, Tiff and Gif formats.
  Default:     False
  Manual:      True

flag arch
  Description: Supports ... formats.
  Default:     False
  Manual:      True

flag code
  Description: Supports ... formats.
  Default:     False
  Manual:      True

flag doc
  Description: Supports ... formats.
  Default:     False
  Manual:      True

flag media
  Description: Supports ... formats.
  Default:     False
  Manual:      True

flag pki
  Description: Supports ... formats.
  Default:     False
  Manual:      True

flag net
  Description: Supports ... formats.
  Default:     False
  Manual:      True

flag bnfc
  Description: Supports bnfc grammer formats.
  Default:     False
  Manual:      True

flag all
  Description: Enables all file formats
  Default:     False
  Manual:      True


library
    hs-source-dirs: src
    exposed-modules:    
        Test.QuickFuzz.Derive
        Test.QuickFuzz.Derive.Actions
        Test.QuickFuzz.Derive.Mutation
        Test.QuickFuzz.Derive.Mutators
        Test.QuickFuzz.Derive.Arbitrary
        Test.QuickFuzz.Derive.Generator
        Test.QuickFuzz.Derive.Show
        Test.QuickFuzz.Derive.NFData
        Test.QuickFuzz.Derive.Fixable
        Test.QuickFuzz.Gen.Base
        Test.QuickFuzz.Gen.Base.Value
        Test.QuickFuzz.Gen.Base.ByteString
        Test.QuickFuzz.Gen.Base.Regex
        Test.QuickFuzz.Gen.Base.String
        Test.QuickFuzz.Gen.Base.Time
        Test.QuickFuzz.Gen.Base.Unicode
        Test.QuickFuzz.Gen.Base.Vector
        Test.QuickFuzz.Gen.FormatInfo
        Test.QuickFuzz.Global

    build-depends: 
        base, bytestring, QuickCheck, megadeth, template-haskell, vector,
        ghc-prim, split, text, containers, time, derive, binary, mtl, 
        transformers, ghc-mod, haskell-src-exts, haskell-src-meta,
        global-variables, deepseq, data-default
    
    if flag(arch) || flag(all)
        cpp-options: -DARCH
        exposed-modules:
            Test.QuickFuzz.Gen.Archive
            Test.QuickFuzz.Gen.Archive.Tar
            Test.QuickFuzz.Gen.Archive.Zip

        build-depends:
            tar, zip-archive

    if flag(media) || flag(all)
        cpp-options: -DMEDIA
        exposed-modules:
            Test.QuickFuzz.Gen.Media
            Test.QuickFuzz.Gen.Media.Wav

        build-depends:
            wavy

    if flag(doc) || flag(all)
        cpp-options: -DDOC
        exposed-modules:
            Test.QuickFuzz.Gen.Document
            Test.QuickFuzz.Gen.Document.Html
            Test.QuickFuzz.Gen.Document.Css
            Test.QuickFuzz.Gen.Document.PDF
            Test.QuickFuzz.Gen.Document.PS
            Test.QuickFuzz.Gen.Document.EPS
            Test.QuickFuzz.Gen.Document.Xml

        build-depends:
            blaze-html, blaze-markup, easyrender, HaXml, xmlgen, blaze-builder, language-css, pretty

    if flag(code) || flag(all)
        cpp-options: -DCODE
        exposed-modules:
            Test.QuickFuzz.Gen.Code
            Test.QuickFuzz.Gen.Code.C
            Test.QuickFuzz.Gen.Code.Js
            Test.QuickFuzz.Gen.Code.Python
            Test.QuickFuzz.Gen.Code.Go
            Test.QuickFuzz.Gen.Code.Lua
            Test.QuickFuzz.Gen.Code.Evm
            Test.QuickFuzz.Gen.Code.GLSL

        build-depends:
            language-c, language-ecmascript, language-python, language-go, language-lua, ethereum-analyzer-deps, language-glsl, pretty
    
    if flag(image) || flag(all)
        cpp-options: -DIMAGE
        exposed-modules:
            Test.QuickFuzz.Gen.Base.Image
            Test.QuickFuzz.Gen.Image
            Test.QuickFuzz.Gen.Image.SVG
            Test.QuickFuzz.Gen.Image.Gif
            Test.QuickFuzz.Gen.Image.Png
            Test.QuickFuzz.Gen.Image.Tiff
            Test.QuickFuzz.Gen.Image.Jpeg
            Test.QuickFuzz.Gen.Image.Tga

        build-depends:
            JuicyPixels, svg-tree, xml
 
    if flag(pki) || flag(all)
        cpp-options: -DPKI
        exposed-modules:
            Test.QuickFuzz.Gen.Pki
            Test.QuickFuzz.Gen.Pki.ASN1
            Test.QuickFuzz.Gen.Pki.X509
            Test.QuickFuzz.Gen.Pki.CRL

        build-depends: asn1-types, asn1-encoding, x509, cryptonite, hourglass


    if flag(net) || flag(all)
        cpp-options: -DNET
        exposed-modules:
            Test.QuickFuzz.Gen.Network
            Test.QuickFuzz.Gen.Network.HTTP

        build-depends:
            HTTP


    if flag(bnfc) || flag(all)
        cpp-options: -DBNFC
        exposed-modules:
            Test.QuickFuzz.Gen.Bnfc
            Test.QuickFuzz.Gen.Bnfc.Grammar
            Test.QuickFuzz.Gen.Bnfc.AbsGrammar
            Test.QuickFuzz.Gen.Bnfc.PrintGrammar
        build-depends:
            BNFC
   
    default-language: Haskell2010
    ghc-options: -O2 -optc-O3 -threaded -rtsopts


executable QuickFuzz
    hs-source-dirs: app
    main-is: Main.hs
    other-modules:
        Args
        Fuzzers
        Debug
        Exception
        Formats
        DeriveDispatcher
        Process
        Utils
        Utils.Generation
        Utils.Decoding
        Utils.Mutation
        Utils.Patch
        Utils.Console
        Utils.Shrink
        Utils.Unique
        Run.GenTest
        Run.MutTest
        Run.Gen
        Run.Serve
        Run.Exec
        Run.Shrink
        Run.List

    if flag(debug)
        cpp-options: -DDEBUG
    if flag(arch) || flag(all)
        cpp-options: -DARCH
    if flag(media) || flag(all)
        cpp-options: -DMEDIA
    if flag(doc) || flag(all)
        cpp-options: -DDOC
    if flag(code) || flag(all)
        cpp-options: -DCODE
    if flag(image) || flag(all)
        cpp-options: -DIMAGE
    if flag(pki) || flag(all)
        cpp-options: -DPKI
    if flag(bnfc) || flag(all)
        cpp-options: -DBNFC
    if flag(net) || flag(all)
        cpp-options: -DNET
        build-depends:
            network
    
    other-extensions: 
        CPP, ViewPatterns

    build-depends: 
        QuickFuzz, base, bytestring, QuickCheck, argparser, split, containers,
        template-haskell, filepath, directory, ansi-terminal, time, process,
        silently, parallel, deepseq, random, process-extras, network, unix,
        global-variables, Diff, stringsearch

    default-language: Haskell2010
    ghc-options: -O2 -optc-O3 -threaded -rtsopts -ddump-splices
